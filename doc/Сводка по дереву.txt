ПРАВИЛА ФОРМИРОВАНИЯ СЕМЕЙНОГО ДЕРЕВА:
1. Все родственники разбиваются на уровни, за пределы которого не могут выходить ни автоматически, ни вручную.
2. Уровни задаются через семейные связи:
- родители рисуются на один уровень выше, чем их дети
- (вытекает из предыдущего) дети - на один уровень ниже, чем их родители
- супруги (в т.ч. и бывшие), братья и сестры рисуются на том же уровне
3. Пункт 2 приведен для нисходящего дерева, в восходящем слова "выше" и "ниже" меняются друг на друга. Пункт про супругов и братьев/сестер не изменяется.
4. Муж отображается слева, жена - справа, между супругами никаких других родственников
5. Братьев и сестер можно отображать с любой более удобной стороны. Предлагаю братьев рисовать с противоположной стороны от супруга.
6. Бывшие супруги сейчас отображаются с той же стороны, что и братья/сестры - для первой версии предлагаю пока там их и оставить.
7. Между родственниками рисуются родственные связи в виде линий:
- между супругами - прямая горизонтальная линия (если супруги бывшие - линия прерывистая)
- от родителей к детям - из центра "супружеской" линии выходит "линия детей" (если детей несколько, линия разветвляется "над" детьми)
- если дети от другого брака, тогда линия "детей" должна выходить из соответствующей "супружеской" линии (для бывших супругов - из прерывистой)




XML

1. В 1ый уровень вложенности XML добавлена группа <setup>, которая будет сообщать о правах доступа к дереву, режим, в котором открывать, и всю сопутствующую информацию)
2. Соответственно, все деревья теперь "обернуты" в группу <trees> (сейчас я передаю всех одним деревом, даже если между некоторыми людьми нет связи, завтра добью разбивку на деревья на выводе к тебе)
3. Вместе с деревом я теперь сам передаю тебе его название
4. У каждого <node> в качестве атрибутов сохранены только uid, name и open (open для тебя всегда открыт, т.е. равен 1), все остальные - в подгруппе <fields>
5. Внутри <relatives> коды групп также изменены на актуальные из базы (еще раз напоминаю, что сейчас мужской и женский пол - это разные категории, если сильно неудобно - обсуждаем)
6. Рядом с каждой связью (node внутри relatives) добавил атрибут status - это флаг подтверждения связи

Так как одна из целей нового дерева - оптимизация, большинство запросов для отображения дерева объединено в одном:
http://www.familyspace.ru/ajax/ajax.tree3.php?action=userlist&uid=X (номер X можешь заменить на свой для начала)

В ответ ты получишь:
- набор настроек
- информацию о списке родственников
- отдельный список родственных связей

Коды связей приведены в ТЗ (отец, брат и т.д.). Там двухмерный массив. Ключи на обоих уровнях - это номера пользователей. Ключ на первом уровне - группировка всех родственников по человеку, для которого они являются близким родством. Ключ на втором уровне - это список близких родственников этого человека и информация о типе связи. Здесь указывается код связи и её статус (0 - на стадии одобрения, 1 - уже подтверждена). Связи двунаправленные. То есть если есть связь "1 сын для 2", тогда есть и вторая связь "2 отец для 1" - то есть все связи зеркально дублируются для удобства.

Некоторые настройки:
"readonly" - режим работы дерева - только просмотр или редактирование
"levels" - максимальная глубина связей относительно заданного пользователя в центре (по умолчанию по 100 поколений вверх и вниз)
"tree_user_id" - номер человека, дерево которого смотришь
"mode" - восходящее или нисходящее дерево (есть в ТЗ - п.3.4)
"animation" - нам очень хочется видеть анимацию формата 3D Cube, полагаем, что некоторым пользователям её захочется отключить
"relative_types" - список типов связей, которые отрисовывать; например для классического генеалогического дерева рисуются только отец-мать и дети (то есть ни братьев с сестрами, ни бывших супругов) - получается бинарное дерево: я - папа+мама + два дедушки с бабушкой + по 4 прародителя и т.д.
"current_year" - это на случай, если дата у юзера стоит кривая на компе, чтобы тебе знать до какого года делать выпадающий список годов рождения в поле "дата"
"zoom" - дефолтный масштаб зума при открытии (100 - норма, 50 - все в 2 раза меньше по ширине и высоте)

В список параметров я не включил домен, с которого к тебе обращаются (например, у нас есть клон сайта - moederevo.ru). Соответственно там бы будешь уже обращаться к http://www.moederevo.ru/ajax...." Уверен, домен ты его сможешь подцепить автоматом сам.

Hidden - означает, что профиль этого человека не доступен пользователю, который сейчас просматривает дерево. То есть мы не целиком скрываем человека из дерева, а лишь закрываем его профиль символом "замка". Для этого человека тебе не будут передаваться ФИО, статус, даты и т.д. Тебе будет известен только его номер и связи с другими родственниками.

Type - это тип связи: 1, 2, 3 и до 10 - это соответственно отец, мать, брат, сестра, сын, дочь, муж, жена, бывший муж, бывшая жена.
Status - 0 или 1 - писал в пред. письме. Это когда связь еще не подтверждена (рисовать нужно будет пунктиром - вот и все отличие).




ТЕЗИСЫ ПРИНЦИПОВ РАБОТЫ

- Рабочий стол многоуровневый (уровни горизонтальные и в ввиде зебры)
- Уровень может раздвинуться автоматически и только по вертикали, если этого требует дополнительный родственник и для него нет места по горизонтали (при автоматическом варианте)
- Можно создавать простые узлы и добавлять их на любой уровень (узлы до связки, существующие вне относительных уровней перерасчета)
- Можно создавать маленькие деревца и соединять их друг с другом
- Если в дереве больше одного узла, то оно таскается полностью с перерасчетом относительных уровней
- Существует автоматическая отрисовка любого дерева (или всех деревьев) и полуавтоматическая (с возможностью двигать узлы в ручную, но только по типу связи в пределах своего уровня)
- ЛКМ можно двигать узлы отдельно либо само дерево, если мышь не указывает на человека
- В ситуации, когда родственные связи замкнуты, то есть вероятность замкнуть цикл вывода, поэтому, чтобы обезопасить код от такой ситуации мы не выводим на экран повторно одних и те же родственников
- Должна быть возможность скрола всего стола дерева от 100% до 10%
- Должно быть 2 режима отображения дерева - просмотр/редактирование
- Должны быть PopUpWindows, ReportWindows, Preloaders
- В режиме редактирования должно быть окно управления узлами (добавление/удаление/редактирование/сохранение и т.д.)
- Перестройка дерева при любых манипуляциях (в том числе и при первой отрисовке) должна быть максимально быстрой с перерисовкой только необходимых элементов, а не всего дерева
- Соединение узлов происходит перетаскиванием вектора с одного узла на другой с последующим выбором типа связи
- Разрыв узлов (веток или листьев дерева) можно организовать так: выделяем связь (не узел) и удаляем ее...
- реализовать "развертывание" не отображенных частей дерева либо вид дерева относительно другого человека посредством "помещения" в центр дерева другого родственника и переключения на отображение дерева относительно него
- реализовать анимацию: при загрузке, при первоначальном отображении ветвей, при добавлении/удалении узлов и связей, при переключении на отображение дерева относительно другого человека
- связи от не близких родственников не должны пересекаться





АЛГОРИТМ РАССТАНОВКИ ПЕРЕМЕННЫХ

Вот алгоритм:

1. На нулевой волне ставим первому v = 0, vc = 0.

2. На i-ой волне идем по всем узлам, отрисованным в этой волне (d=i), и получаем новых родственников (d=i+1).
2.1. Пусть очередной узел из волны d=i будет А, а из волны d=i+1 будет X.
2.2. Сравниваем А и Х - для получения направления вектора:
- если новый узел Х на том же уровне, что узел А, вектор v для X ставим такой же, как и у X ==> X.v = A.v
- если Х ниже, чем исходный А, тогда X.v = -1
- если Х выше, чем исходный А, тогда X.v = +1
- нулевой (none) вектор может быть только у близких родственников для d=0, которые располагаются на его уровне и связь к которым идет от нулевого элемента не пересекая границы рядов совсем
2.3. Сравниваем А и Х - для получения vc (счетчик инкрементируется только если произошла смена с -1 на +1 или наоборот, 0 - не в счет):
- если A.v == 1 и X.v == -1 ==> X.vc = A.vc+1
- если A.v == -11 и X.v == 1 ==> X.vc = A.vc+1
- во всех остальных случаях ==> X.vc = A.vc

3. В итоге:
- каждый ряд - это получается группа тесно связанных родственников: супруги, их браться с сестрами и их супруги и т.д.
- перемножение v и vc дает нам номер ряда в уровне
- элементы в ряду по горизонтальной составляющей расставляем от оси симметрии в порядке возрастания d
- про отступы и "выравнивание" расскажу по скайпу
